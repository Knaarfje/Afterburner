"use strict";particlesJS("particles-js",{particles:{number:{value:10,density:{enable:!0,value_area:800}},color:{value:"#ffffff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:.1,random:!1,anim:{enable:!1,speed:1,opacity_min:.01,sync:!1}},size:{value:3,random:!0,anim:{enable:!1,speed:10,size_min:.1,sync:!1}},line_linked:{enable:!0,distance:150,color:"#ffffff",opacity:.05,width:1},move:{enable:!0,speed:2,direction:"none",random:!1,straight:!1,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:600,rotateY:1200}}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!0,mode:"grab"},onclick:{enable:!0,mode:"push"},resize:!0},modes:{grab:{distance:140,line_linked:{opacity:.1}},bubble:{distance:400,size:40,duration:5,opacity:.1,speed:300},repulse:{distance:200,duration:.4},push:{particles_nb:3},remove:{particles_nb:2}}},retina_detect:!0});var reg;"serviceWorker"in navigator&&(console.log("Service Worker is supported"),navigator.serviceWorker.register("/serviceworker.js").then(function(){return navigator.serviceWorker.ready}).then(function(serviceWorkerRegistration){console.log("Service Worker is ready :^)",reg),reg=serviceWorkerRegistration})["catch"](function(error){console.log("Service Worker error :^(",error)}),navigator.serviceWorker.getRegistrations().then(function(a){for(var i in a)a[i].active.scriptURL.indexOf("/scripts/ser")>=0&&a[i].unregister()}));var app=angular.module("afterburnerApp",["firebase","ngTouch","ngRoute","angular.filter","ng-sortable"]),templatePath="./Assets/dist/Templates";app.config(function($locationProvider,$routeProvider,$firebaseRefProvider){var config={apiKey:"AIzaSyCIzyCEYRjS4ufhedxwB4vCC9la52GsrXM",authDomain:"project-7784811851232431954.firebaseapp.com",databaseURL:"https://project-7784811851232431954.firebaseio.com",storageBucket:"project-7784811851232431954.appspot.com",messagingSenderId:"767810429309"};$locationProvider.html5Mode(!0),$firebaseRefProvider.registerUrl(config.databaseURL),firebase.initializeApp(config),$routeProvider.when("/signin",{template:"<signin></signin>"}).when("/",{resolve:{chart:function(SprintService){return SprintService.getOverviewChart()}},template:'\n                <app>\n                    <sprints title="\'Overview\'" \n                             back-title="\'Velocity\'" \n                             chart="$resolve.chart">\n                    </sprints> \n                </app>'}).when("/current-sprint",{resolve:{chart:function(SprintService){return SprintService.getCurrentChart()}},template:'\n                <app>\n                    <sprints title="$resolve.chart.name" \n                             back-title="\'Burndown\'" \n                             chart="$resolve.chart"\n                             backlog="true">\n                    </sprints>\n                </app>'}).when("/sprint/:sprint",{resolve:{chart:function(SprintService,$route){var sprint=$route.current.params.sprint;return SprintService.getSprintChart(sprint)}},template:'\n                <app>\n                    <sprints title="$resolve.chart.name" \n                             back-title="\'Burndown\'" \n                             chart="$resolve.chart"\n                             backlog="true">\n                    </sprints>\n                </app>'}).when("/bigscreen",{resolve:{chart:function(SprintService){return SprintService.getOverviewChart()}},template:'\n                <bigscreen>\n                    <sprints title="\'Overview\'" \n                             back-title="\'Velocity\'" \n                             chart="$resolve.chart">\n                    </sprints> \n                </bigscreen>'}).when("/bigscreen/current-sprint",{resolve:{chart:function(SprintService){return SprintService.getCurrentChart()}},template:'\n                <bigscreen>\n                    <sprints title="$resolve.chart.name" \n                             back-title="\'Burndown\'" \n                             chart="$resolve.chart"\n                             backlog="false">\n                    </sprints>\n                </bigscreen>'}).when("/bigscreen/sprint/:sprint",{resolve:{chart:function(SprintService,$route){var sprint=$route.current.params.sprint;return SprintService.getSprintChart(sprint)}},template:'\n                <bigscreen>\n                    <sprints title="$resolve.chart.name" \n                             back-title="\'Burndown\'" \n                             chart="$resolve.chart"\n                             backlog="false">\n                    </sprints>\n                </bigscreen>'}).when("/backlog",{resolve:{firebaseUser:function($firebaseAuthService){return $firebaseAuthService.$waitForSignIn()}},template:"\n                <app>\n                    <backlog title=\"'Backlog'\"\n                             back-title=\"'Overview'\">\n                    </backlog>\n                </app>"}).otherwise("/")}),app.component("app",{transclude:!0,controller:function($location,$firebaseAuth,SprintService){var ctrl=this,auth=$firebaseAuth();ctrl.auth=auth,auth.$getAuth()||$location.path("/signin"),ctrl.navOpen=!1,ctrl.signOut=function(){ctrl.auth.$signOut(),$location.path("/signin")}},templateUrl:templatePath+"/app.html"}),app.component("backlog",{bindings:{title:"<",backTitle:"<"},controller:function(BacklogService,SprintService,$firebaseAuth,$firebaseArray,FileService,$scope,NotificationService){var ctrl=this;$firebaseAuth();ctrl.formOpen=!1,ctrl.state={New:"0",Approved:"1",Done:"3",Removed:"4"},ctrl.filter={},ctrl.open=!0,BacklogService.getBacklog().then(function(data){ctrl.BiItems=data,ctrl.reOrder()}),SprintService.getSprints(function(sprints){ctrl.sprints=sprints}),$scope.customOrder=function(key){return ctrl.sprints?key.sprint?-ctrl.sprints.$getRecord(key.sprint).order:9999:0},ctrl.reOrder=function(group){group&&group.forEach(function(item,index){item.order!==index&&(item.order=index,ctrl.saveItem(item))})},ctrl.sumEffort=function(items){var sum=0;for(var i in items)sum+=items[i].effort;return sum},ctrl.orderBySprint=function(key){return key?ctrl.sprints.$getRecord(key).order:99999},ctrl.selectItem=function(item){ctrl.formOpen=!0,ctrl.selectedItem=item,FileService.getAttachments(item).then(function(data){ctrl.selectedItemAttachments=data})},ctrl.addItem=function(){var newItem={name:"Nieuw...",effort:0,description:"",order:-1,state:0,sprint:""};BacklogService.add(newItem).then(function(data){ctrl.selectItem(ctrl.BiItems.$getRecord(data.key)),ctrl.formOpen=!0})},ctrl.deleteItem=function(item){var index=ctrl.BiItems.indexOf(item),selectIndex=0===index?0:index-1;BacklogService.remove(item).then(function(){ctrl.selectItem(ctrl.BiItems[selectIndex]),ctrl.formOpen=!1})},ctrl.saveItem=function(item){item.state==ctrl.state.Done?(item.resolvedOn||NotificationService.notify("Smells like fire...",'Work on "'+item.name+'" has been completed!'),item.resolvedOn=item.resolvedOn||Date.now()):item.resolvedOn=null,BacklogService.save(item).then(function(){ctrl.formOpen=!1})},ctrl.filterItems=function(x){x==ctrl.filter.state?ctrl.filter={name:ctrl.filter.name}:ctrl.filter.state=x},ctrl.sortConfig={animation:150,handle:".sortable-handle",onAdd:function(e){var model=e.model,sprint=e.models[0].sprint;if(model&&model.sprint!=sprint){var index=ctrl.BiItems.$indexFor(model.$id);ctrl.BiItems[index].sprint=sprint,ctrl.BiItems.$save(index),ctrl.reOrder(e.models)}},onRemove:function(e){ctrl.reOrder(e.models)},onUpdate:function(e){ctrl.reOrder(e.models)}}},templateUrl:templatePath+"/backlog.html"}),app.component("backlogForm",{bindings:{item:"<",sprints:"<",attachments:"<",onAdd:"&",onDelete:"&",onSave:"&"},controller:function(BacklogService,$firebaseAuth,$firebaseArray,$firebaseObject){var ctrl=this;ctrl.attachmentsToAdd;var fileSelect=document.createElement("input");fileSelect.type="file",fileSelect.multiple="multiple",fileSelect.onchange=function(evt){ctrl.uploadFiles(fileSelect.files)};var mimeMap={};mimeMap["image/jpeg"]="fa-picture-o",mimeMap["image/png"]="fa-picture-o",mimeMap["image/gif"]="fa-picture-o",mimeMap["image/tif"]="fa-picture-o",mimeMap["application/pdf"]="fa-file-pdf-o",mimeMap["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"]="fa-file-excel-o",mimeMap["application/vnd.openxmlformats-officedocument.presentationml.presentation"]="fa-file-powerpoint-o",mimeMap["application/vnd.openxmlformats-officedocument.wordprocessingml.document"]="fa-file-word-o",mimeMap["application/x-zip-compressed"]="fa-file-archive-o",mimeMap["video/webm"]="fa-file-video-o",ctrl.getFileIcon=function(a){return mimeMap[a.mimetype]?mimeMap[a.mimetype]:"fa-file-o"},ctrl.getFileExtention=function(a){var parts=a.name.split(".");return parts[parts.length-1]},ctrl.selectFiles=function(){ctrl.item&&fileSelect.click()},ctrl.uploadFiles=function(files){for(var f in files){var file=files[f];file instanceof File&&ctrl.uploadFile(file)}},ctrl.uploadFile=function(file){var path=ctrl.item.$id+"/"+file.name,key=-1,attachment={backlogItem:ctrl.item.$id,name:file.name,path:path,mimetype:file.type,state:1,progress:0};ctrl.attachments.$add(attachment).then(function(ref){key=ref.key;var storageRef=firebase.storage().ref(path),uploadTask=storageRef.put(file);uploadTask.on("state_changed",function progress(snapshot){var progress=snapshot.bytesTransferred/snapshot.totalBytes*100,r=ctrl.attachments.$getRecord(key);r.progress=progress,ctrl.attachments.$save(r)},function(error){},function(){var downloadURL=uploadTask.snapshot.downloadURL,r=ctrl.attachments.$getRecord(key);r.url=downloadURL,r.state=0,ctrl.attachments.$save(r)})})},ctrl.removeAttachment=function(a,e){return e.stopPropagation(),e.preventDefault(),ctrl.attachments.$remove(a),!1}},templateUrl:templatePath+"/backlogForm.html"}),app.component("backlogItem",{bindings:{item:"<",onClick:"&"},controller:function(BacklogService,$firebaseAuth){},templateUrl:templatePath+"/backlogItem.html"}),app.component("bigscreen",{transclude:!0,controller:function($location,$firebaseAuth,SprintService){var ctrl=this,auth=$firebaseAuth();ctrl.auth=auth,auth.$getAuth()||$location.path("/signin"),ctrl.navOpen=!1,ctrl.signOut=function(){ctrl.auth.$signOut(),$location.path("/signin")}},templateUrl:templatePath+"/bigscreen.html"}),app.component("chart",{bindings:{options:"<",data:"<",loaded:"<",type:"<"},controller:function($element,$scope,$timeout,$location,$rootScope,SprintService){function init(){ctrl.chart&&ctrl.chart.destroy(),ctrl.chart=new Chart($canvas,{type:ctrl.type,data:ctrl.data,options:ctrl.options}),window.chart=ctrl.chart,"/"===$location.path()&&($canvas.onclick=function(e){var activePoints=ctrl.chart.getElementsAtEvent(e);activePoints&&activePoints.length>1&&!function(){var clickedIndex=activePoints[1]._index,clickedSprint=SprintService.getCachedSprints()[clickedIndex].order;$timeout(function(){return $location.path("/sprint/"+clickedSprint)})}()})}var ctrl=this,$canvas=$element[0].querySelector("canvas");ctrl.chart,$scope.$watch(function(){return ctrl.loaded},function(loaded){loaded&&init()}),$rootScope.$on("sprint:update",function(){$timeout(function(){return ctrl.chart.update()})})},template:"<canvas></canvas>"}),app.component("footer",{bindings:{sprint:"<"},controller:function(){var ctrl=this;ctrl.statOpen=!1},templateUrl:templatePath+"/footer.html"}),app.component("overviewFooter",{bindings:{sprint:"<"},controller:function(){var ctrl=this;ctrl.statOpen=!1},templateUrl:templatePath+"/footer.html"}),app.component("sideNav",{bindings:{user:"<",open:"<",onSignOut:"&"},controller:function(NotificationService,$timeout,$scope){var ctrl=this;ctrl.open=!1,ctrl.hasSubscription=!1,ctrl.checkSubscription=function(){reg.pushManager.getSubscription().then(function(sub){sub?ctrl.hasSubscription=!0:ctrl.hasSubscription=!1,$timeout(function(){$scope.$apply()})})},ctrl.subscribe=function(){NotificationService.subscribe().then(function(d){ctrl.checkSubscription()})},ctrl.unsubscribe=function(){NotificationService.unsubscribe().then(function(d){ctrl.checkSubscription()})}},templateUrl:templatePath+"/sideNav.html"}),app.component("signin",{controller:function($firebaseAuth,$location){var ctrl=this;ctrl.signIn=function(name,email){$firebaseAuth().$signInWithEmailAndPassword(name,email).then(function(data){$location.path("/")})}},templateUrl:templatePath+"/signin.html"}),app.component("sprintBacklog",{bindings:{items:"<"},controller:function(BacklogService,$firebaseAuth){},templateUrl:templatePath+"/sprintBacklog.html"}),app.component("sprints",{bindings:{title:"<",backTitle:"<",backlog:"<",chart:"="},controller:function($firebaseAuth,SprintService,BacklogService,$scope,$timeout,$rootScope){var ctrl=this;$firebaseAuth();ctrl.state={New:"0",Approved:"1",Done:"3",Removed:"4"},ctrl.loaded=!1,ctrl.filter={},ctrl.chart.sprint&&ctrl.backlog&&BacklogService.getBacklog(ctrl.chart.sprint).then(function(data){ctrl.BiItems=data,$timeout(function(){return ctrl.loaded=!0}),ctrl.BiItems.$loaded(function(){ctrl.chart.sprint.start&&(ctrl.setBurndown(ctrl.chart.sprint.start,ctrl.chart.sprint.duration,ctrl.BiItems),ctrl.BiItems.$watch(function(e){ctrl.setBurndown(ctrl.chart.sprint.start,ctrl.chart.sprint.duration,ctrl.BiItems),$rootScope.$broadcast("sprint:update")}))})}),ctrl.filterItems=function(x){x==ctrl.filter.state?ctrl.filter={name:ctrl.filter.name}:ctrl.filter.state=x},ctrl.$onInit=function(){ctrl.chart.sprint&&ctrl.backlog||(ctrl.loaded=!0)},ctrl.setBurndown=function(start,duration,backlog){start=new Date(1e3*start);for(var dates=[],burndown=[],daysToAdd=0,velocityRemaining=ctrl.chart.sprint.velocity,graphableBurndown=[],totalBurndown=0,i=0;i<=duration;i++){var newDate=start.addDays(daysToAdd-1);newDate>new Date||([0,6].indexOf(newDate.getDay())>=0?(daysToAdd++,newDate=start.addDays(daysToAdd),i--):(dates.push(newDate),daysToAdd++))}for(var i in dates){var d=dates[i],bdown=0;for(var i2 in backlog){var bli=backlog[i2];if("3"==bli.state){var bliDate=new Date(parseInt(bli.resolvedOn));bliDate.getDate()==d.getDate()&&bliDate.getMonth()==d.getMonth()&&bliDate.getFullYear()==d.getFullYear()&&(bdown+=bli.effort)}}burndown.push({date:d,burndown:bdown})}for(var x in burndown)totalBurndown+=burndown[x].burndown,velocityRemaining-=burndown[x].burndown,graphableBurndown.push(velocityRemaining);ctrl.chart.burndown=totalBurndown,ctrl.chart.remaining=velocityRemaining,ctrl.chart.data.datasets[0].data=graphableBurndown}},templateUrl:templatePath+"/sprints.html"}),Date.prototype.addDays=function(days){var dat=new Date(this.valueOf());return dat.setDate(dat.getDate()+days),dat},app.factory("BacklogService",function($rootScope,$firebaseArray,$firebaseObject,UtilityService,$q,$filter,$location,$timeout){function getBacklog(sprint){return $q(function(resolve,reject){sprint?(backlog=$firebaseArray(ref.child("backlog").orderByChild("sprint").equalTo(sprint.$id)),resolve(backlog)):(backlog=$firebaseArray(ref.child("backlog").orderByChild("order")),resolve(backlog))})}function add(backlogItem){return backlog.$add(backlogItem)}function remove(backlogItem){return backlog.$remove(backlogItem)}function save(backlogItem){return backlog.$save(backlogItem)}var ref=firebase.database().ref(),backlog=void 0;return{getBacklog:getBacklog,save:save,add:add,remove:remove}}),app.factory("FileService",function($rootScope,UtilityService,$q,$timeout,$firebaseArray){function getAttachments(backlogItem){return $q(function(resolve,reject){backlogItem?(attachments=$firebaseArray(ref.child("attachments").orderByChild("backlogItem").equalTo(backlogItem.$id)),resolve(attachments)):reject("Backlog item not provided")})}var ref=firebase.database().ref(),attachments=void 0;return{getAttachments:getAttachments}}),app.factory("NotificationService",function($rootScope,$firebaseArray,$firebaseObject,UtilityService,$q,$firebaseAuth,$http){function subscribe(){return $q(function(resolve,reject){console.log(reg),reg.pushManager.getSubscription().then(function(sub){if(sub)return void resolve(!1)}),reg.pushManager.subscribe({userVisibleOnly:!0}).then(function(pushSubscription){var sub=pushSubscription;console.log("Subscribed! Endpoint:",sub.endpoint);var endpoint=sub.endpoint.split("/");endpoint=endpoint[endpoint.length-1];var subscriptions=$firebaseArray(ref.child("subscriptions").orderByChild("endpoint").equalTo(endpoint));subscriptions.$loaded().then(function(data){!subscriptions.length>0&&subscriptions.$add({uid:userId,endpoint:endpoint,keys:JSON.parse(JSON.stringify(pushSubscription)).keys}),resolve(!0)})})})}function unsubscribe(){return $q(function(resolve,reject){reg.pushManager.getSubscription().then(function(sub){if(!sub)return void resolve(!1);var endpoint=sub.endpoint.split("/");endpoint=endpoint[endpoint.length-1],sub.unsubscribe().then(function(d){var subscriptions=$firebaseArray(ref.child("subscriptions").orderByChild("endpoint").equalTo(endpoint));subscriptions.$loaded().then(function(data){subscriptions.length>0&&subscriptions.$remove(0),resolve(!0)})})})})}function notify(title,message){return $q(function(resolve,reject){$http({url:"https://notifications.boerdamdns.nl/api/notify/post?title="+title+"&message="+message,method:"POST"}).then(function(a){resolve(a)})})}var ref=firebase.database().ref(),auth=$firebaseAuth(),userId=auth.$getAuth().uid,reg=window.reg;return{subscribe:subscribe,unsubscribe:unsubscribe,notify:notify}}),app.factory("SprintService",function($rootScope,$firebaseArray,$firebaseObject,UtilityService,$q,$filter,$location,$timeout){function getSprints(cb){var sprints=$firebaseArray(ref.child("sprints").orderByChild("order").limitToLast(9));sprints.$loaded(cb,function(){return $location.path("/signin")})}function getCachedSprints(){return cachedSprints}function getOverviewChart(){var deferred=$q.defer();return getSprints(function(sprints){sprints.$loaded(function(){cachedSprints=sprints,updateOverviewChart(deferred,sprints),sprints.$watch(function(){cachedSprints=sprints,$rootScope.$broadcast("sprint:update"),updateOverviewChart(deferred,sprints)})})}),deferred.promise}function updateOverviewChart(deferred,sprints){var labels=void 0,estimated=void 0,burned=void 0,average=[];labels=sprints.map(function(d){return"Sprint "+_.pad(d.order)}),estimated=sprints.map(function(d){return d.velocity}),burned=sprints.map(function(d){var i=0;for(var x in d.burndown)i+=d.burndown[x];return i});for(var sum=0,i=0;i<burned.length-1;i++)sum+=parseInt(burned[i],10);for(var avg=sum/(burned.length-1),i=0;i<sprints.length;i++)average.push(avg);var data=overviewData;data.labels=labels,data.datasets[2].data=burned,data.datasets[1].data=estimated,data.datasets[0].data=average;var overviewChartOptions=chartOptions;overviewChartOptions.scales.yAxes[0].ticks.suggestedMax=100,overviewChartOptions.scales.yAxes[1].ticks.suggestedMax=100;var currentSprint=sprints[sprints.length-1],chartObj={type:"bar",options:overviewChartOptions,data:data,velocity:currentSprint.velocity,burndown:_.sum(currentSprint.burndown),remaining:currentSprint.velocity-_.sum(currentSprint.burndown),needed:$filter("number")(currentSprint.velocity/currentSprint.duration,1)};deferred.resolve(chartObj)}function buildBurnDownChart(sprint){var labels=["di","wo","do","vr","ma","di ","wo ","do ","vr ","ma "].slice(0,sprint.duration+1),idealBurndown=labels.map(function(d,i){return i===labels.length-1?sprint.velocity.toFixed(2):(sprint.velocity/sprint.duration*i).toFixed(2)}).reverse(),velocityRemaining=sprint.velocity,graphableBurndown=[];for(var x in sprint.burndown)velocityRemaining-=sprint.burndown[x],graphableBurndown.push(velocityRemaining);var data=burndownData;data.labels=labels,data.datasets[0].data=graphableBurndown,data.datasets[1].data=idealBurndown;var burndownChartOptions=chartOptions;burndownChartOptions.scales.yAxes[0].ticks.suggestedMax=10*(sprint.duration+1),burndownChartOptions.scales.yAxes[1].ticks.suggestedMax=10*(sprint.duration+1);var chartObj={type:"line",options:burndownChartOptions,data:data,velocity:sprint.velocity,name:sprint.name,burndown:_.sum(sprint.burndown),remaining:sprint.velocity-_.sum(sprint.burndown),needed:$filter("number")(sprint.velocity/sprint.duration,1),sprint:sprint};return chartObj}function getCurrentChart(){var deferred=$q.defer();return getSprints(function(sprints){var current=sprints.$keyAt(sprints.length-1),currentSprint=(current.split("s")[1],$firebaseObject(ref.child("sprints/"+current)));currentSprint.$watch(function(e){$rootScope.$broadcast("sprint:update"),deferred.resolve(buildBurnDownChart(currentSprint))})}),deferred.promise}function getSprintChart(sprintNumber){var deferred=$q.defer();return getSprints(function(sprints){var sprint=$firebaseObject(ref.child("sprints/s"+sprintNumber));sprint.$watch(function(e){$rootScope.$broadcast("sprint:update"),deferred.resolve(buildBurnDownChart(sprint))})}),deferred.promise}var _=UtilityService,ref=firebase.database().ref(),lineColor="#EB51D8",barColor="#5FFAFC",cachedSprints=void 0,chartOptions={responsive:!0,maintainAspectRatio:!1,tooltips:{mode:"single",cornerRadius:3},elements:{line:{fill:!1}},legend:{display:!1},scales:{xAxes:[{display:!0,gridLines:{display:!1,color:"rgba(255,255,255,.1)"},ticks:{fontColor:"#fff"}}],yAxes:[{type:"linear",display:!0,position:"left",id:"y-axis-1",ticks:{stepSize:10,beginAtZero:!0,fontColor:"#fff",suggestedMax:null},gridLines:{display:!0,color:"rgba(255,255,255,.1)",drawTicks:!1},labels:{show:!0}},{type:"linear",display:!1,position:"right",id:"y-axis-2",ticks:{stepSize:10,beginAtZero:!0,fontColor:"#fff",suggestedMax:100},gridLines:{display:!1},labels:{show:!1}}]}},overviewData={labels:[],datasets:[{type:"line",label:"Average",data:[],fill:!1,backgroundColor:"#58F484",borderColor:"#58F484",hoverBackgroundColor:"#58F484",hoverBorderColor:"#58F484",yAxisID:"y-axis-1"},{type:"line",label:"Estimated",data:[],fill:!1,backgroundColor:lineColor,borderColor:lineColor,hoverBackgroundColor:"#5CE5E7",hoverBorderColor:"#5CE5E7",yAxisID:"y-axis-1"},{label:"Achieved",type:"bar",data:[],fill:!1,borderColor:barColor,backgroundColor:barColor,pointBorderColor:barColor,pointBackgroundColor:barColor,pointHoverBackgroundColor:barColor,pointHoverBorderColor:barColor,yAxisID:"y-axis-2"}]},burndownData={labels:["di","wo","do","vr","ma","di ","wo ","do ","vr ","ma "],datasets:[{label:"Gehaald",type:"line",data:[],fill:!1,yAxisID:"y-axis-2",borderColor:lineColor,backgroundColor:lineColor,pointBorderColor:lineColor,pointBackgroundColor:lineColor,pointHoverBackgroundColor:lineColor,pointHoverBorderColor:lineColor,hitRadius:15,lineTension:0},{type:"line",label:"Mean Burndown",data:[],fill:!1,yAxisID:"y-axis-1",borderColor:barColor,backgroundColor:barColor,pointBorderColor:barColor,pointBackgroundColor:barColor,pointHoverBackgroundColor:barColor,pointHoverBorderColor:barColor,hitRadius:15,lineTension:0}]};return{getSprints:getSprints,getOverviewChart:getOverviewChart,getCurrentChart:getCurrentChart,getSprintChart:getSprintChart,getCachedSprints:getCachedSprints}}),app.factory("UtilityService",function(){function pad(n){return n<10?"0"+n:n}function sum(items){var i=0;for(var x in items)i+=items[x];return i}return{pad:pad,sum:sum}});